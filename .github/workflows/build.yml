name: build

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        compiler: [gcc, clang]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Linux setup
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install \
          g++-11 \
          clang-12 \
          autoconf \
          automake \
          autotools-dev \
          autopoint \
          libtool \
          pkg-config \
          libssl-dev \
          libc-ares-dev \
          zlib1g-dev \
          libsqlite3-dev \
          libssh2-1-dev \
          libcppunit-dev
    - name: Setup clang (Linux)
      if: runner.os == 'Linux' && matrix.compiler == 'clang'
      run: |
        echo 'CC=clang-12' >> $GITHUB_ENV
        echo 'CXX=clang++-12' >> $GITHUB_ENV
    - name: Setup gcc (Linux)
      if: runner.os == 'Linux' && matrix.compiler == 'gcc'
      run: |
        echo 'CC=gcc-11' >> $GITHUB_ENV
        echo 'CXX=g++-11' >> $GITHUB_ENV
    - name: Libtool
      run: |
        autoreconf -i
    - name: Configure autotools (Linux)
      if: runner.os == 'Linux'
      run: |
        ./configure \
          CPPFLAGS="-fsanitize=address" LDFLAGS="-fsanitize=address"
    - name: Build aria2
      run: |
        make -j"$(nproc 2> /dev/null || sysctl -n hw.ncpu)" check
        
    - name: Step 1 - Create a temporary artifact downloads folder
      run: mkdir ~/downloads
        
    - name: step 2 - Add artifacts to publish to the temp folder
      run: |
        cp -r /home/runner/work/aria2/aria2 ~/downloads
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: aria2_latest
        path: ~/downloads
